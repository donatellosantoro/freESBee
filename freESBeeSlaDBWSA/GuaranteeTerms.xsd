<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:wsa="http://www.w3.org/2005/08/addressing" 
           xmlns:wsag="http://schemas.ggf.org/graap/2007/03/ws-agreement" 
           xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" 
           xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           attributeFormDefault="qualified" elementFormDefault="qualified"
           targetNamespace="http://schemas.ggf.org/graap/2007/03/ws-agreement">
    <xs:import namespace="http://www.w3.org/2001/XMLSchema" schemaLocation="http://www.w3.org/2001/XMLSchema.xsd"/>
    <xs:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://wGww.w3.org/2005/08/addressing/ws-addr.xsd"/>
    <xs:import namespace="http://docs.oasis-open.org/wsrf/bf-2" schemaLocation="http://docs.oasis-open.org/wsrf/bf-2.xsd"/>
    <xs:element name="Template" type="wsag:AgreementTemplateType"/>
    <xs:element name="AgreementOffer" type="wsag:AgreementType"/>
    <xs:element name="Name" type="xs:string"/>
    <xs:element name="AgreementId" type="xs:string"/>
    <xs:element name="Context" type="wsag:AgreementContextType"/>
    <xs:element name="Terms" type="wsag:TermTreeType"/>
    <xs:element name="All" type="wsag:TermCompositorType"/>
    <xs:element name="NoncriticalExtensions" type="wsag:NoncriticalExtensionType"/>
    <xs:complexType name="TermTreeType">
        <xs:sequence>
            <xs:element ref="wsag:All" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AgreementContextType">
        <xs:sequence>
            <xs:element name="AgreementInitiator" type="xs:anyType" minOccurs="0"/>
            <xs:element name="AgreementResponder" type="xs:anyType" minOccurs="0"/>
            <xs:element name="ServiceProvider" type="wsag:AgreementRoleType"/>
            <xs:element name="ExpirationTime" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="TemplateId" type="xs:string" minOccurs="0"/>
            <xs:element name="TemplateName" type="xs:string" minOccurs="0"/>
            <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other"/>
    </xs:complexType>
    <xs:complexType name="TermCompositorType">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="ExactlyOne" type="wsag:TermCompositorType"/>
                <xs:element name="OneOrMore" type="wsag:TermCompositorType"/>
                <xs:element ref="wsag:All"/>
                <xs:element name="ServiceDescriptionTerm" type="wsag:ServiceDescriptionTermType"/>
                <xs:element name="ServiceReference" type="wsag:ServiceReferenceType"/>
                <xs:element name="ServiceProperties" type="wsag:ServicePropertiesType"/>
                <xs:element name="GuaranteeTerm" type="wsag:GuaranteeTermType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AgreementTemplateType">
        <xs:complexContent>
            <xs:extension base="wsag:AgreementType">
                <xs:sequence>
                    <xs:element name="CreationConstraints" type="wsag:ConstraintSectionType"/>
                </xs:sequence>
                <xs:attribute name="TemplateId" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AgreementType">
        <xs:sequence>
            <xs:element ref="wsag:Name" minOccurs="0"/>
            <xs:element ref="wsag:Context"/>
            <xs:element ref="wsag:Terms"/>
        </xs:sequence>
        <xs:attribute name="AgreementId" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="AgreementInitiatorIdentifierType">
        <xs:sequence>
            <xs:element name="Reference" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AgreementResponderIdentifierType">
        <xs:sequence>
            <xs:element name="Reference" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="TermType" abstract="true">
        <xs:attribute name="Name" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="GuaranteeTermType">
        <xs:complexContent>
            <xs:extension base="wsag:TermType">
                <xs:sequence>
                    <xs:element name="ServiceScope" type="wsag:ServiceSelectorType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="wsag:QualifyingCondition" minOccurs="0"/>
                    <xs:element ref="wsag:ServiceLevelObjective"/>
                    <xs:element name="BusinessValueList" type="wsag:BusinessValueListType"/>
                </xs:sequence>
                <xs:attribute name="Obligated" type="wsag:ServiceRoleType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ServiceSelectorType">
        <xs:sequence>
            <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="ServiceName" type="xs:string"/>
    </xs:complexType>
    <xs:element name="QualifyingCondition" type="xs:anyType"/>
    <xs:element name="ServiceLevelObjective" type="wsag:ServiceLevelObjectiveType"/>
    <xs:complexType name="BusinessValueListType">
        <xs:sequence>
            <xs:element name="Importance" type="xs:integer" minOccurs="0"/>
            <xs:element name="Penalty" type="wsag:CompensationType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Reward" type="wsag:CompensationType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Preference" type="wsag:PreferenceType" minOccurs="0"/>
            <xs:element name="CustomBusinessValue" type="xs:anyType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="CompensationType">
        <xs:sequence>
            <xs:element name="AssessmentInterval">
                <xs:complexType>
                    <xs:sequence>
                        <xs:choice>
                            <xs:element name="TimeInterval" type="xs:duration"/>
                            <xs:element name="Count" type="xs:positiveInteger"/>
                        </xs:choice>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="ValueUnit" type="xs:string" minOccurs="0"/>
            <xs:element name="ValueExpression" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PreferenceType">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="ServiceTermReference" type="xs:string"/>
            <xs:element name="Utility" type="xs:float"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ServiceTermType" abstract="true">
        <xs:complexContent>
            <xs:extension base="wsag:TermType">
                <xs:attribute name="ServiceName" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ServiceReferenceType">
        <xs:complexContent>
            <xs:extension base="wsag:ServiceTermType">
                <xs:sequence>
                    <xs:any namespace="##other" processContents="strict"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ServiceDescriptionTermType">
        <xs:complexContent>
            <xs:extension base="wsag:ServiceTermType">
                <xs:sequence>
                    <xs:any namespace="##other" processContents="strict"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ServicePropertiesType">
        <xs:complexContent>
            <xs:extension base="wsag:ServiceTermType">
                <xs:sequence>
                    <xs:element name="VariableSet" type="wsag:VariableSetType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ServiceNameSet">
        <xs:sequence>
            <xs:element name="ServiceName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="Location" type="xs:string"/>
    <xs:complexType name="VariableType">
        <xs:sequence>
            <xs:element ref="wsag:Location"/>
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Metric" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="VariableSetType">
        <xs:sequence>
            <xs:element name="Variable" type="wsag:VariableType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ConstraintSectionType">
        <xs:sequence>
            <xs:element name="Item" type="wsag:OfferItemType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="wsag:Constraint" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="OfferItemType">
        <xs:sequence>
            <xs:element ref="wsag:Location"/>
            <xs:element name="ItemConstraint">
                <xs:complexType>
                    <xs:choice minOccurs="0">
                        <xs:group ref="xs:simpleRestrictionModel"/>
                        <xs:group ref="xs:typeDefParticle"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string"/>
    </xs:complexType>
    <xs:element name="Constraint" type="xs:anyType"/>
    <xs:simpleType name="AgreementRoleType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AgreementInitiator"/>
            <xs:enumeration value="AgreementResponder"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ServiceRoleType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ServiceConsumer"/>
            <xs:enumeration value="ServiceProvider"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="NoncriticalExtensionType">
        <xs:sequence>
            <xs:any namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ServiceLevelObjectiveType">
        <xs:choice>
            <xs:element name="KPITarget" type="wsag:KPITargetType"/>
            <xs:element name="CustomServiceLevel" type="wsag:CustomServiceLevelType"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="KPITargetType">
        <xs:sequence>
            <xs:element name="KPIName" type="xs:string"/>
            <xs:element name="CustomServiceLevel" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ContinuingFaultType">
        <xs:complexContent>
            <xs:extension base="wsrf-bf:BaseFaultType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ContinuingFault" type="wsag:ContinuingFaultType"/>
    <xs:complexType name="CustomServiceLevelType">
        <xs:sequence>
            <!-- valore soglia e operatore per testare il rispetto del parametro -->
            <xs:element ref="wsag:Threshold"/>
            <!-- valore composto da testare -->
            <xs:element name="Function" type="wsag:FunctionType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="Threshold">
        <xs:complexType>
            <xs:attribute name="Operator" type="wsag:OperatorType" use="required"/>
            <xs:attribute name="Value" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="OperatorType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Greater"/>
            <xs:enumeration value="GreaterEqual"/>
            <xs:enumeration value="Less"/>
            <xs:enumeration value="LessEqual"/>
            <xs:enumeration value="Equal"/>
            <xs:enumeration value="NotEqual"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- Funzioni per il calcolo di metriche composte (def. astratta) -->
    <xs:complexType name="FunctionType" abstract="true">
        <xs:attribute name="resultType" type="wsag:Type"/>
    </xs:complexType>
    <!-- Tipi dei valori di ritorno -->
    <xs:simpleType name="Type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="integer"/>
            <xs:enumeration value="float"/>
            <xs:enumeration value="double"/>
            <xs:enumeration value="long"/>
            <xs:enumeration value="byte"/>
            <xs:enumeration value="boolean"/>
            <xs:enumeration value="string"/>
            <xs:enumeration value="time"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="BasicMetric">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="Unit" type="xs:string"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <!-- Funzioni standard (estensioni del tipo astratto) -->
    <!-- Funzioni base aritmetiche -->
    <xs:complexType name="Plus">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <xs:element name="Operand" type="wsag:OperandType" minOccurs="2" maxOccurs="2"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Minus">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <xs:element name="Operand" type="wsag:OperandType" minOccurs="2" maxOccurs="2"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Divide">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <xs:element name="Operand" type="wsag:OperandType" minOccurs="2" maxOccurs="2"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Times">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <xs:element name="Operand" type="wsag:OperandType" minOccurs="2" maxOccurs="2"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Round">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <xs:choice>
                        <xs:element ref="wsag:BasicMetric"/>
                        <xs:element name="Function" type="wsag:FunctionType"/>
                    </xs:choice>
                    <xs:element name="Digits" type="xs:long"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- Funzioni Complesse  -->
    <xs:complexType name="Mean">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <!-- Elemento del quale si collezioneranno i valori sui quali poi calcolare la media -->
                    <xs:choice>
                        <xs:element ref="wsag:BasicMetric"/>
                        <xs:element name="Function" type="wsag:FunctionType"/>
                    </xs:choice>
                    <!-- Numero di valori o intervallo di tempo sui quali calc. la media -->
                    <xs:element ref="wsag:Window"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Max">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <!-- Elemento del quale si collezioneranno i valori sui quali poi calcolare il max -->
                    <xs:choice>
                        <xs:element ref="wsag:BasicMetric"/>
                        <xs:element name="Function" type="wsag:FunctionType"/>
                    </xs:choice>
                    <!-- Numero di valori o intervallo di tempo sui quali calc. il max -->
                    <xs:element ref="wsag:Window"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Min">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <!-- Elemento del quale si collezioneranno i valori sui quali poi calcolare il min -->
                    <xs:choice>
                        <xs:element ref="wsag:BasicMetric"/>
                        <xs:element name="Function" type="wsag:FunctionType"/>
                    </xs:choice>
                    <!-- Numero di valori o intervallo di tempo sui quali calc. il min -->
                    <xs:element ref="wsag:Window"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Sum">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <!-- Elemento del quale si collezioneranno i valori sui quali poi calcolare la sommatoria -->
                    <xs:choice>
                        <xs:element ref="wsag:BasicMetric"/>
                        <xs:element name="Function" type="wsag:FunctionType"/>
                    </xs:choice>
                    <!-- Numero di valori o intervallo di tempo sui quali calc. la sommatoria -->
                    <xs:element ref="wsag:Window"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Hits">
        <xs:complexContent>
            <xs:extension base="wsag:FunctionType">
                <xs:sequence>
                    <!-- Elemento del quale si conteranno le occorrenze (senza riguardo al valore contenuto) -->
                    <xs:element ref="wsag:BasicMetric"/>
                    <!-- eventuale valore soglia e operatore per decidere se contare le letture -->
                    <xs:element ref="wsag:Threshold" minOccurs="0"/>
                    <!-- Numero di valori o intervallo di tempo relat. al quale contare le rilevazioni; in questo caso se la Window è di tipo “Times” e non c'è "Threshold", il risultato è pleonastico -->
                    <xs:element ref="wsag:Window"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="OperandType">
        <xs:sequence>
            <xs:choice>
                <xs:element ref="wsag:BasicMetric"/>
                <xs:element name="Function" type="wsag:FunctionType"/>
                <xs:element name="LongScalar" type="xs:long"/>
                <xs:element name="FloatScalar" type="xs:float"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="Window">
        <xs:complexType>
            <xs:choice>
                <xs:element name="Interval" type="wsag:IntervalTimeType"/>
                <xs:element name="Times" type="xs:long"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="IntervalTimeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Year"/>
            <xs:enumeration value="SixMonths"/>
            <xs:enumeration value="ThreeMonths"/>
            <xs:enumeration value="Month"/>
            <xs:enumeration value="TwoWeeks"/>
            <xs:enumeration value="Week"/>
            <xs:enumeration value="Day"/>
            <xs:enumeration value="SixHours"/>
            <xs:enumeration value="Hour"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
